{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/fscreen/lib/index.js","webpack:///./src/js/fullscreen.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","fullscreenEnabled","fullscreenElement","requestFullscreen","exitFullscreen","fullscreenchange","fullscreenerror","webkit","moz","ms","document","window","vendor","keys","default","element","requestFullscreenFunction","addEventListener","type","handler","options","removeEventListener","Boolean","val","onfullscreenchange","toLowerCase","onfullscreenerror","imgArr","images","toggleFullscreen","e","fscreen","err","alert","concat","message","target","removeAttribute","forEach","img","console","log","imgNoClass","find","className","alt","setAttribute"],"mappings":"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","file":"fullscreen.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar key = {\n  fullscreenEnabled: 0,\n  fullscreenElement: 1,\n  requestFullscreen: 2,\n  exitFullscreen: 3,\n  fullscreenchange: 4,\n  fullscreenerror: 5\n};\n\nvar webkit = ['webkitFullscreenEnabled', 'webkitFullscreenElement', 'webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitfullscreenchange', 'webkitfullscreenerror'];\n\nvar moz = ['mozFullScreenEnabled', 'mozFullScreenElement', 'mozRequestFullScreen', 'mozCancelFullScreen', 'mozfullscreenchange', 'mozfullscreenerror'];\n\nvar ms = ['msFullscreenEnabled', 'msFullscreenElement', 'msRequestFullscreen', 'msExitFullscreen', 'MSFullscreenChange', 'MSFullscreenError'];\n\n// so it doesn't throw if no window or document\nvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\nvar vendor = 'fullscreenEnabled' in document && Object.keys(key) || webkit[0] in document && webkit || moz[0] in document && moz || ms[0] in document && ms || [];\n\nexports.default = {\n  requestFullscreen: function requestFullscreen(element) {\n    return element[vendor[key.requestFullscreen]]();\n  },\n  requestFullscreenFunction: function requestFullscreenFunction(element) {\n    return element[vendor[key.requestFullscreen]];\n  },\n  get exitFullscreen() {\n    return document[vendor[key.exitFullscreen]].bind(document);\n  },\n  addEventListener: function addEventListener(type, handler, options) {\n    return document.addEventListener(vendor[key[type]], handler, options);\n  },\n  removeEventListener: function removeEventListener(type, handler, options) {\n    return document.removeEventListener(vendor[key[type]], handler, options);\n  },\n  get fullscreenEnabled() {\n    return Boolean(document[vendor[key.fullscreenEnabled]]);\n  },\n  set fullscreenEnabled(val) {},\n  get fullscreenElement() {\n    return document[vendor[key.fullscreenElement]];\n  },\n  set fullscreenElement(val) {},\n  get onfullscreenchange() {\n    return document[('on' + vendor[key.fullscreenchange]).toLowerCase()];\n  },\n  set onfullscreenchange(handler) {\n    return document[('on' + vendor[key.fullscreenchange]).toLowerCase()] = handler;\n  },\n  get onfullscreenerror() {\n    return document[('on' + vendor[key.fullscreenerror]).toLowerCase()];\n  },\n  set onfullscreenerror(handler) {\n    return document[('on' + vendor[key.fullscreenerror]).toLowerCase()] = handler;\n  }\n};","import fscreen from 'fscreen';\n\n// convert HTMLCollection of images within document to an array\nconst imgArr = [...document.images];\n\nconst toggleFullscreen = e => {\n\n  // if full-screen mode is supported\n  if (fscreen.fullscreenEnabled) {\n\n    // if full-screen mode is disabled\n    if (!fscreen.fullscreenElement) {\n      \n      /**\n       * for Safari compatibility:\n       * remove class from clicked image\n       */\n      e.target.removeAttribute('class');\n\n      // enable full-screen mode for clicked image\n      fscreen.requestFullscreen(e.target).catch(err => {\n        alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n      });\n\n    // if full-screen mode is enabled\n    } else {\n\n      // disable full-screen mode\n      fscreen.exitFullscreen().catch(err => {\n        alert(`Error attempting to disable full-screen mode: ${err.message} (${err.name})`);\n      });\n    }\n  }\n};\n\n// toggle full-screen mode when an image is clicked\nimgArr.forEach(img => {\n  img.addEventListener('click', toggleFullscreen, false);\n});\n\n// 'fullscreenchange' event handler\nfscreen.addEventListener('fullscreenchange', e => {\n  if (fscreen.fullscreenElement) {\n    console.log('Enter full-screen');\n  } else {\n    console.log('Exit full-screen');\n\n    /**\n     * for Safari compatibility:\n     * add class back to clicked image\n     */\n    const imgNoClass = imgArr.find(img => img.className === '');\n\n    if (imgNoClass.alt === 'Blouberg Beach' || imgNoClass.alt === 'Alston') {\n      imgNoClass.setAttribute('class', 'photo--landscape');\n    } else {\n      imgNoClass.setAttribute('class', 'photo--square');\n    }\n  }\n});"],"sourceRoot":""}